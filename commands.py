import os
import time
import random
import vk_api
from tools import Tools

d = {'`': '—ë', 'q': '–π', 'w': '—Ü', 'e': '—É', 'r': '–∫', 't': '–µ', 'y': '–Ω', 'u': '–≥', 'i': '—à', 'o': '—â', 'p': '–∑', '[': '—Ö', ']': '—ä', 'a': '—Ñ', 's': '—ã', 'd': '–≤', 'f': '–∞', 'g': '–ø', 'h': '—Ä', 'j': '–æ', 'k': '–ª', 'l': '–¥', ';': '–∂', "'": '—ç', 'z': '—è', 'x': '—á', 'c': '—Å', 'v': '–º', 'b': '–∏', 'n': '—Ç', 'm': '—å', ',': '–±'}

help_message = "–®–∏–ª–æ –º—ã–ª–æ —Ö—É–π, –ø–æ–∑–≤–æ–ª—å—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å—Å—è, —è -- –ë–ª—è–±–æ—Ç üòà\n"\
"–ß—Ç–æ —è —É–º–µ—é? –ò—Å–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏ –æ—à–∏–±–∫–∏ –º–æ–ª–æ–¥–æ—Å—Ç–∏, –∂–µ–ª–∞—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, —Å—á–∏—Ç–∞—Ç—å –º–æ–º–µ–Ω—Ç—ã –∏ (–Ω–µ)–º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n"\
"–°–∫–∞–∂—É —Å—Ä–∞–∑—É -- –∂–µ–Ω—â–∏–Ω—É –Ω–∞–π—Ç–∏ –Ω–µ —Å–º–æ–≥—É, —è –∂–µ –Ω–µ –±–æ—Ç –¥–∞–π–≤–∏–Ω—á–∏–∫–∞, —Ö–æ—Ç—è –ø–æ —Å—É—Ç–∏ —Ç–æ—Ç –∂–µ –∫—É—Å–æ–∫ –≥–æ–≤–Ω–æ–∫–æ–¥–∞.\n\n"\
"–í –æ–±—â–µ–º, –µ–±–∞–Ω—ã–π —Å—ã—Ä, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: \n"\
"   ü§£ —Ñ–∞–∫, –¥–µ–ª–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤–∞—à–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞—Å–∫–ª–∞–¥–∫–æ–π)\n"\
"	üòé –∑–∞–∫—Ä–µ–ø—Ä–æ–ª–ª (–ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç–æ–∏–Ω –ª–∏ –≤–∞—à –≤—ã—Å–µ—Ä –≤–∏—Å–µ—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–µ)\n"\
"	üêä —Ä—É–ª–µ—Ç–∫–∞ (—Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 1/6 –∫–∏–∫–∞–µ—Ç —Ç–µ–±—è –∏–∑ –∫–æ–Ω—Ñ—ã)\n"\
"	ü•Ä –º–æ–º–µ–Ω—Ç, –¥–µ–ª–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞ –º–æ–º–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä \"–±–ª—è–±–æ—Ç –º–æ–º–µ–Ω—Ç (–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)\")\n"\
"	üëÄ –º–æ–º–µ–Ω—Ç —Ä–µ–π—Ç–∏–Ω–≥ (–≤—ã–≤–æ–¥–∏—Ç —Ç–æ–ø –º–æ–º–µ–Ω—Ç–æ–≤)\n"\
"   üá¶üá≤ –∞–Ω–µ–∫ (—Å–∞—Ä–∞—Ç–æ–≤—Å–∫–∏–π –∞—Ä–º—è–Ω–∏–Ω —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –≤–∞–º —Ä–∞–Ω–¥–æ–º–Ω—É—é —Ä–∂–∞–∫—É)\n\n"\
"–ö–æ–º–∞–Ω–¥—ã –ø—Ä–æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ \"–±–ª—è–±–æ—Ç –∫–æ–º–∞–Ω–¥–∞\" –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ –æ–±—Ä–∞—Ç–Ω–æ–µ. –ù–∞–ø—Ä–∏–º–µ—Ä \"–±–ª—è–±–æ—Ç —Ñ–∞–∫\"."\

moment_stat = "–¢–æ–ø –º–æ–º–µ–Ω—Ç–æ–≤:\n\n"

class Poebot(object):
    def __init__(self, vk) -> None:
        self.vk = vk
        self.tools = Tools()

    def help(self, peer_id):
        self.vk.method("messages.send", {'peer_id': peer_id, 'message': help_message, 'random_id': random.randint(-2147483648, 2147483647)})   

    def ping(self, peer_id):     
        self.vk.method("messages.send", {'peer_id': peer_id, 'message': 'pong', 'random_id': random.randint(-2147483648, 2147483647)})
    
    def nocommand(self, peer_id):
        self.vk.method("messages.send", {'peer_id': peer_id, 'message': '–∫–∞–≤–æ? –ø–∏—à–∏ –±–ª—è–±–æ—Ç –ø–æ–º–æ—â—å –∏ –Ω–µ –µ–±–∏ –º–æ–∑–≥', 'random_id': random.randint(-2147483648, 2147483647)})

    def dm(self, peer_id):
        self.vk.method("messages.send", {'peer_id': peer_id, 'message': "—Ö—É–ª–∏ –ø–∞–ª–∏—à—å —à–º—ã–≥–∞, —è —Ç–æ–ª—å–∫–æ –ø–æ –∫–æ–Ω—Ñ–∞–º —Ä–∞–±–æ—Ç–∞—é", 'random_id': random.randint(-2147483648, 2147483647)})

    def fuck(self, obj, peer_id):
        if obj.reply_message:
            converted = ''
            if obj['reply_message']['text'].lower() != '':
                        text = obj['reply_message']['text'].lower()
            else:
                if len(obj['reply_message']['fwd_messages']) != 0:
                        text = ''
                        for i in obj['reply_message']['fwd_messages']:
                            text = text + i['text'] + '\n' 
                        text.lower()
                else:
                    if obj['fwd_messages'][0]['text'] != '':
                        text = ''
                        for i in obj['fwd_messages']:
                            text = text + i['text'] + '\n' 
                        text.lower()

            for i in text:
                try:
                    converted = converted + d[i]
                except:
                    converted = converted + i
            self.vk.method("messages.send", {'peer_id': peer_id, 'message': converted, 'random_id': random.randint(-2147483648, 2147483647)})
        else:
            self.vk.method("messages.send", {'peer_id': peer_id, 'message': '—á—É–≤–∞–∫, fuck –¥–µ–ª–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ', 'random_id': random.randint(-2147483648, 2147483647)})

    def anec(self, peer_id):
        count = len(os.listdir("anecdotes/"))
        x = random.randint(1, count)
        path = "anecdotes/" + str(x) + ".ogg"

        attach = self.tools.uploadVoice(self.vk, peer_id, path)

        self.vk.method("messages.send", {'peer_id': peer_id, 'attachment': attach, 'random_id': random.randint(-2147483648, 2147483647)})

    def sleep(self, peer_id, user_id):
        user_get = self.vk.method('users.get', {'user_ids': user_id, 'random_id': random.randint(-2147483648, 2147483647)})
        user = user_get[0]['first_name'] + ' ' + user_get[0]['last_name']
        message = '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, @id' + str(user_id) + " (" + user + ")"
        count = len(os.listdir("cats/"))

        cat = random.randint(1, count)
        path = "cats/" + str(cat) + ".jpeg"

        attach = self.tools.uploadPhoto(self.vk, path)

        self.vk.method("messages.send", {'peer_id': peer_id, 'message': message, 'attachment': attach, 'random_id': random.randint(-2147483648, 2147483647)})

    def pinroll(self, obj, peer_id, msg_id, cmsg_id):
        if obj.reply_message:
            if random.choice([True, False]):
                self.vk.method("messages.pin", {"peer_id": peer_id, "message_id": obj.reply_message["id"], "conversation_message_id": obj.reply_message["conversation_message_id"], "random_id": random.randint(-2147483648, 2147483647)})
            else:
                self.vk.method("messages.send", {'peer_id': peer_id, 'message': "—Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ—Å—Ç–æ –Ω–µ —Ç–≤–æ–π –¥–µ–Ω—å", 'random_id': random.randint(-2147483648, 2147483647)})
    def roulette(self, peer_id, user_id):
        drum = [0, 0, 0, 0, 0, 0]
        random.seed(time.time())
        x = random.randint(0, 5)
        drum[x] = 1

        shot = random.choice(drum)
        if shot:
            self.vk.method("messages.removeChatUser", {"chat_id": peer_id-2000000000, "user_id": user_id, "random_id": random.randint(-2147483648, 2147483647)})
            self.vk.method("messages.send", {'peer_id': peer_id, 'message': "—É–ø—Å", 'random_id': random.randint(-2147483648, 2147483647)})
        else:
            self.vk.method("messages.send", {'peer_id': peer_id, 'message': "–ø–æ–≤–µ–∑–ª–æ –ø–æ–≤–µ–∑–ª–æ", 'random_id': random.randint(-2147483648, 2147483647)})

    def newmoment(self, obj):
        if obj.reply_message:
            user_get = self.vk.method('users.get', {'user_ids': obj['reply_message']['from_id'], 'random_id': random.randint(-2147483648, 2147483647)})
            user = user_get[0]['first_name'] + ' ' + user_get[0]['last_name']
            chat_id = obj.peer_id
            result = self.tools.insertSQL(chat_id - 2000000000, obj['reply_message']['from_id'], user)
            self.vk.method("messages.send", {'peer_id': chat_id, 'message': result, 'random_id': random.randint(-2147483648, 2147483647)})

    def momentstat(self, peer_id): 
        moment_stat = "–¢–æ–ø –º–æ–º–µ–Ω—Ç–æ–≤:\n\n" + self.tools.selectSQL(peer_id - 2000000000)
        self.vk.method("messages.send", {'peer_id': peer_id, 'message': moment_stat, 'random_id': random.randint(-2147483648, 2147483647)})


# ------------------------ UNUSED COMMANDS ------------------------ 

    def artyom():
        now = datetime.now()
        date = datetime.strptime('9 February 2020', '%d %B %Y')
        return('–ê—Ä—Ç–µ–º –¥–æ–ª–∂–µ–Ω –ì–æ—à–µ —É–∂–µ ' + str((now - date).days) + ' –¥–Ω–µ–π')

    def me(obj):
        text = obj.text
        user_id = obj.from_id
        user_inf = vk.method('users.get', {'user_ids': user_id, 'random_id': random.randint(-2147483648, 2147483647)})
        user = user_inf[0]['first_name'] + ' ' + user_inf[0]['last_name']
        return(user + ' ' + text[4:])

    def todo(obj):
        user_get = vk.method('users.get', {'user_ids': obj.from_id, 'random_id': random.randint(-2147483648, 2147483647)})
        user = user_get[0]['first_name'] + ' ' + user_get[0]['last_name']
        text = obj.text[6:]
        splitted_txt = re.split(r'[*]', text)
        p1 = splitted_txt[0].strip()
        p2 = splitted_txt[1].strip()
        return('"' + p1 + '" ‚Äî —Å–∫–∞–∑–∞–ª ' + user + ' –∏ ' + p2)

# ------------------------ UNUSED COMMANDS ------------------------ 